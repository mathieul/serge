var _jamesmacaulay$elm_graphql$GraphQL_Request_Document_AST_Value_Json_Encode$encode = function (value) {
	var _p0 = value;
	switch (_p0.ctor) {
		case 'VariableValue':
			return _elm_lang$core$Json_Encode$null;
		case 'IntValue':
			return _elm_lang$core$Json_Encode$int(_p0._0);
		case 'FloatValue':
			return _elm_lang$core$Json_Encode$float(_p0._0);
		case 'StringValue':
			return _elm_lang$core$Json_Encode$string(_p0._0);
		case 'BooleanValue':
			return _elm_lang$core$Json_Encode$bool(_p0._0);
		case 'NullValue':
			return _elm_lang$core$Json_Encode$null;
		case 'EnumValue':
			return _elm_lang$core$Json_Encode$string(_p0._0);
		case 'ListValue':
			return _elm_lang$core$Json_Encode$list(
				A2(_elm_lang$core$List$map, _jamesmacaulay$elm_graphql$GraphQL_Request_Document_AST_Value_Json_Encode$encode, _p0._0));
		default:
			return _elm_lang$core$Json_Encode$object(
				A2(
					_elm_lang$core$List$map,
					_elm_lang$core$Tuple$mapSecond(_jamesmacaulay$elm_graphql$GraphQL_Request_Document_AST_Value_Json_Encode$encode),
					_p0._0));
	}
};
